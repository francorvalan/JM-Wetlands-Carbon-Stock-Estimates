library(car)
qqPlot(res_aov$residuals,
id = FALSE # id = FALSE to remove point identification
)
# QQ-plot
qqPlot(res_aov$residuals,
xlab= "Quantiles teóricos Normales",
ylab = "Quantiles Residuos",envelope=F,
id = FALSE # id = FALSE to remove point identification
)
# QQ-plot
qqPlot(res_aov$residuals,
xlab= "Quantiles teóricos Normales",
ylab = "Quantiles Residuos",envelope=T,
id = FALSE # id = FALSE to remove point identification
)
ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
geom_density(alpha=.3)
Biomasa %>% select(Sp.Dom)
Biomasa %>% select(Sp.Dom) %>% unique()
Biomasa %>% select(Sp.Dom) %>% summarise(n=n())
Biomasa %>% group_by(Sp.Dom) %>% summarise(n=n())
ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
geom_histogram(alpha=.3)
str(Biomasa)
Biomasa <- read.xlsx2("./02_Data/01_Samples/Original_data/108052-01_ResultadosTerrenoBiomasa.xlsx",1) %>% mutate(Ps_Verano_g.m2 =as.numeric(Ps_Verano_g.m2),
Ps_Otoño_g.m2 =as.numeric(Ps_Otoño_g.m2)                                                                       )
ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
geom_histogram(alpha=.3)
ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
geom_density(alpha=.3)
res_aov <- aov(Ps_Verano_g.m2 ~ Sp.Dom,  data = Biomasa
)
# QQ-plot
qqPlot(res_aov$residuals,
xlab= "Quantiles teóricos Normales",
ylab = "Quantiles Residuos",envelope=T,
id = FALSE # id = FALSE to remove point identification
)
ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
geom_density(alpha=.3)
shapiro.test(res_aov$residuals)
knitr::opts_chunk$set(echo = TRUE)
# library(RODBC)
library(sf)
library(car)
library(tmap)
library(paletteer)
library(summarytools)
library(tidyr)
library(dplyr)
# library(tmaptools)
library(kableExtra)
library(ggplot2)
# library(terra)
# library(OpenStreetMap)
# library(RColorBrewer)
library(reactablefmtr)
library(tidyverse)
# library(formattable)
# library(gapminder)
tmap_mode("plot")
library(xlsx)
options(OutDec= ",")
decimales=10
Biomasa <- read.xlsx2("./02_Data/01_Samples/Original_data/108052-01_ResultadosTerrenoBiomasa.xlsx",1) %>% mutate(Ps_Verano_g.m2 =as.numeric(Ps_Verano_g.m2),
Ps_Otoño_g.m2 =as.numeric(Ps_Otoño_g.m2)                                                                       )
#Biomasa %>% group_by(Sp.Dom) %>% summarise(n=n())
res_aov <- aov(Ps_Verano_g.m2 ~ Sp.Dom,  data = Biomasa
)
# QQ-plot
qqPlot(res_aov$residuals,
xlab= "Quantiles teóricos Normales",
ylab = "Quantiles Residuos",envelope=T,
id = FALSE # id = FALSE to remove point identification
)
# ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
#   geom_density(alpha=.3)
shapiro.test(res_aov$residuals)
leveneTest(Ps_Verano_g.m2 ~ Sp.Dom,
data = Biomasa)
remotes::install_github("easystats/report")
View(Biomasa)
oneway.test(Ps_Verano_g.m2 ~ Sp.Dom,
data = Biomasa
var.equal = FALSE # assuming unequal variances
oneway.test(Ps_Verano_g.m2 ~ Sp.Dom,
data = Biomasa,
var.equal = FALSE # assuming unequal variances
)
library(multcomp)
library(multcomp)
# Tukey HSD test:
post_test <- glht(res_sp,
linfct = mcp(species = "Tukey")
)
# Tukey HSD test:
post_test <- glht(res_sp,
linfct = mcp(Sp.Dom = "Tukey")
)
res_sp
res_sp <- aov(Ps_Verano_g.m2 ~ Sp.Dom,  data = Biomasa
)
# QQ-plot
qqPlot(res_sp$residuals,
xlab= "Quantiles teóricos Normales",
ylab = "Quantiles Residuos",envelope=T,
id = FALSE # id = FALSE to remove point identification
)
# ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
#   geom_density(alpha=.3)
# Tukey HSD test:
post_test <- glht(res_sp,
linfct = mcp(Sp.Dom = "Tukey")
)
# Tukey HSD test:
post_test <- glht(res_sp,
linfct = mcp(species = "Tukey")
)
# Tukey HSD test:
post_test <- glht(res_sp,
linfct = mcp(Sp.Dom = "Tukey")
)
res_sp
library(ggstatsplot)
install.packages("ggstatsplot")
library(ggstatsplot)
library(ggstatsplot)
ggbetweenstats(
data = dat,
x = Sp.Dom,
y = Ps_Verano_g.m2,
type = "Kruskal-Wallis", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE
)
ggbetweenstats(
data = Biomasa,
x = Sp.Dom,
y = Ps_Verano_g.m2,
type = "Kruskal-Wallis", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE
)
test_fisher <- glht(res_sp, linfct = mcp(sp_dominante = "Tukey"))
modelo <- lm(Ps_Verano_g.m2 ~ sp_dominante, data = Biomasa)
modelo <- lm(Ps_Verano_g.m2 ~ Sp.Dom, data = Biomasa)
#test_fisher <- glht(res_sp, linfct = mcp(sp_dominante = "Tukey"))
summary(test_fisher)
test_fisher <- glht(modelo, linfct = mcp(sp_dominante = "Tukey"))
modelo <- lm(Ps_Verano_g.m2 ~ Sp.Dom, data = Biomasa)
test_fisher <- glht(modelo, linfct = mcp(sp_dominante = "Tukey"))
test_fisher <- glht(modelo, linfct = mcp(Sp.Dom = "Tukey"))
modelo
test_fisher <- glht(modelo, linfct = mcp(`Sp.Dom` = "Tukey"))
Biomasa$SP_dominante <- Biomasa$Sp.Dom
test_fisher <- glht(modelo, linfct = mcp(SP_dominante = "Tukey"))
modelo <- lm(Ps_Verano_g.m2 ~ SP_dominante, data = Biomasa)
test_fisher <- glht(modelo, linfct = mcp(SP_dominante = "Tukey"))
library(multcomp)
modelo <- lm(Ps_Verano_g.m2 ~ SP_dominante, data = Biomasa)
test_fisher <- glht(modelo, linfct = mcp(SP_dominante = "Tukey"))
# Biomass data
Biomasa <- read.csv2("./02_Data/01_Samples/Processed_data/Biomass_samples.csv",
fileEncoding ="Latin1")
ggplot(Biomasa) +
aes(x = sp_dominante, y = PS_Verano, color = sp_dominante) +
geom_jitter() +
theme(legend.position = "none")
Biomasa_st <- Biomasa %>%
st_as_sf(coords = c("Este","Norte"),crs=5344)
st_write(Biomasa_st,"./02_Data/01_Samples/Processed_data/Biomasa.gpkg")
library(ggplot2)
Biomasa %>% ggplot(aes(x=sp_dominante,y = PS_Verano,fill=sp_dominante))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5,
size = 10),
plot.title = element_text(hjust = 0.5))
fisher.test(x = tabla, alternative = "two.sided")
modelo <- lm(PS_Verano ~ sp_dominante, data = Biomasa)
resultado_anova <- anova(modelo)
print(resultado_anova)
library(multcomp)
test_fisher <- glht(modelo, linfct = mcp(sp_dominante = "Tukey"))
summary(test_fisher)
# Realizar el test de Tukey HSD
tukey <- TukeyHSD(aov(PS_Verano ~ sp_dominante, data = Biomasa))
print(tukey)
plot(tukey)
stats::plot
tukey_df <- as.data.frame(tukey$sp_dominante)
# Agregar nombres de comparaciones como columna separada
tukey_df$Comparison <- rownames(tukey_df)
# Graficar con ggplot2
ggplot(tukey_df, aes(x = Comparison, y = diff)) +
geom_point() +
geom_errorbar(aes(ymin = lwr, ymax = upr), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
coord_flip() +
labs(title = "Tukey HSD Test - Diferencias de medias entre especies",
x = "Comparaciones",
y = "Diferencia de medias")
########################################################
anova <- aov(PS_Verano ~ sp_dominante, data = Biomasa)
summary(anova)
# Tukey's test
tukey <- TukeyHSD(anova)
anova
# compact letter display
cld <- multcompLetters4(anova, tukey)
print(cld)
tukey <- TukeyHSD(modelo)
# table with factors and 3rd quantile
Tk <- group_by(Biomasa,sp_dominante) %>%
summarise(mean=mean(PS_Verano), quant = quantile(PS_Verano, probs = 0.75)) %>%
arrange(desc(mean))
# extracting the compact letter display and adding to the Tk table
cld <- as.data.frame.list(cld$sp_dominante)
Tk$cld <- cld$Letters
print(Tk)
# boxplot
ggplot(Biomasa, aes(sp_dominante, PS_Verano)) +
geom_boxplot(aes(fill = sp_dominante), show.legend = FALSE) +
labs(x="sp dominante", y="Peso seco (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = sp_dominante, y = quant, label = cld), size = 3, vjust=-1, hjust =-1) +
scale_fill_brewer(palette = "Pastel1")
# Obtener las letras de significancia
letras <- multcompLetters4(modelo, tukey)
# Convertir en un dataframe para usar con ggplot2
letras_df <- as.data.frame(letras$sp_dominante)
letras_df$sp_dominante <- rownames(letras_df)
colnames(letras_df)[1] <- "Letter"
Tk
# table with factors and 3rd quantile
Tk <- group_by(Biomasa,sp_dominante) %>%
summarise(mean=mean(PS_Verano), quant = quantile(PS_Verano, probs = 0.75)) %>%
arrange(desc(mean))
# extracting the compact letter display and adding to the Tk table
cld <- as.data.frame.list(cld$sp_dominante)
Tk$cld <- cld$Letters
c
cld
# extracting the compact letter display and adding to the Tk table
cld <- as.data.frame.list(cld$sp_dominante)
tukey
print(tukey)
plot(tukey)
stats::plot
tukey_df <- as.data.frame(tukey$sp_dominante)
# Agregar nombres de comparaciones como columna separada
tukey_df$Comparison <- rownames(tukey_df)
# Graficar con ggplot2
ggplot(tukey_df, aes(x = Comparison, y = diff)) +
geom_point() +
geom_errorbar(aes(ymin = lwr, ymax = upr), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed") +
coord_flip() +
labs(title = "Tukey HSD Test - Diferencias de medias entre especies",
x = "Comparaciones",
y = "Diferencia de medias")
########################################################
anova <- aov(PS_Verano ~ sp_dominante, data = Biomasa)
summary(anova)
# Tukey's test
tukey <- TukeyHSD(anova)
anova
# compact letter display
cld <- multcompLetters4(anova, tukey)
print(cld)
# compact letter display
library(multcompView)
cld <- multcompLetters4(anova, tukey)
print(cld)
tukey <- TukeyHSD(modelo)
# table with factors and 3rd quantile
Tk <- group_by(Biomasa,sp_dominante) %>%
summarise(mean=mean(PS_Verano), quant = quantile(PS_Verano, probs = 0.75)) %>%
arrange(desc(mean))
# extracting the compact letter display and adding to the Tk table
cld <- as.data.frame.list(cld$sp_dominante)
Tk$cld <- cld$Letters
print(Tk)
# boxplot
ggplot(Biomasa, aes(sp_dominante, PS_Verano)) +
geom_boxplot(aes(fill = sp_dominante), show.legend = FALSE) +
labs(x="sp dominante", y="Peso seco (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = sp_dominante, y = quant, label = cld), size = 3, vjust=-1, hjust =-1) +
scale_fill_brewer(palette = "Pastel1")
cld
ggbetweenstats(
data = Biomasa,
x = Sp.Dom,
y = Ps_Verano_g.m2,
type = "ANOVA", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE
)
library(ggstatsplot)
ggbetweenstats(
data = Biomasa,
x = Sp.Dom,
y = Ps_Verano_g.m2,
type = "ANOVA", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE
)
ggbetweenstats(
data = Biomasa,
x = sp_dominante,
y = Ps_Verano_g.m2,
type = "ANOVA", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE
)
ggbetweenstats(
data = Biomasa,
x = sp_dominante,
y = Biomasa$PS_Verano,
type = "ANOVA", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE
)
ggbetweenstats(
data = Biomasa,
x = sp_dominante,
y = PS_Verano,
type = "ANOVA", # ANOVA or Kruskal-Wallis
var.equal = TRUE, # ANOVA or Welch ANOVA
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE
)
# boxplot
ggplot(Biomasa, aes(sp_dominante, PS_Verano)) +
geom_boxplot(aes(fill = sp_dominante), show.legend = FALSE) +
labs(x="sp dominante", y="Peso seco (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = sp_dominante, y = quant, label = cld), size = 3, vjust=-1, hjust =-1) +
scale_fill_brewer(palette = "Pastel1")
tukey
cld
tukey
########################################################
anova <- aov(PS_Verano ~ sp_dominante, data = Biomasa)
summary(anova)
# Tukey's test
tukey <- TukeyHSD(anova)
anova
# compact letter display
library(multcompView)
print(cld)
tukey <- TukeyHSD(modelo)
cld <- multcompLetters4(anova, tukey)
print(cld)
# table with factors and 3rd quantile
Tk <- group_by(Biomasa,sp_dominante) %>%
summarise(mean=mean(PS_Verano), quant = quantile(PS_Verano, probs = 0.75)) %>%
arrange(desc(mean))
# extracting the compact letter display and adding to the Tk table
cld <- as.data.frame.list(cld$sp_dominante)
Tk$cld <- cld$Letters
print(Tk)
Biomasa
ggplot(Biomasa, aes(sp_dominante, PS_Verano)) +
geom_boxplot(aes(fill = sp_dominante), show.legend = FALSE)
# boxplot
ggplot(Biomasa, aes(sp_dominante, PS_Verano)) +
geom_boxplot(aes(fill = sp_dominante), show.legend = FALSE) +
labs(x="sp dominante", y="Peso seco (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = sp_dominante, y = quant, label = cld), size = 3, vjust=-1, hjust =-1) +
scale_fill_brewer(palette = "Pastel1")
anova
summary(anova)
# Tukey's test
tukey <- TukeyHSD(anova)
tukey
cld
tukey
tukey$sp_dominante
Tk
print(Tk)
print(cld)
# Tuckey test representation :
plot(tukey , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "Biomasa$sp_dominante")
# Apply the function on my dataset
LABELS <- generate_label_df(tuckey , "Biomasa$sp_dominante")
# Apply the function on my dataset
LABELS <- generate_label_df(tukey , "Biomasa$sp_dominante")
# Apply the function on my dataset
LABELS <- generate_label_df(tukey , Biomasa$sp_dominante)
tukey
tukey[["sp_dominante"]]
# Apply the function on my dataset
LABELS <- generate_label_df(tukey , "sp_dominante")
LABELS
cld
res_aov<- oneway.test(Ps_Verano_g.m2 ~ Sp.Dom,
data = Biomasa,
var.equal = T # assuming unequal variances
)
knitr::opts_chunk$set(echo = TRUE)
# library(RODBC)
library(sf)
library(car)
library(tmap)
library(paletteer)
library(summarytools)
library(tidyr)
library(dplyr)
# library(tmaptools)
library(kableExtra)
library(ggplot2)
# library(terra)
# library(OpenStreetMap)
# library(RColorBrewer)
library(reactablefmtr)
library(tidyverse)
# library(formattable)
# library(gapminder)
tmap_mode("plot")
library(xlsx)
options(OutDec= ",")
decimales=10
Biomasa <- read.xlsx2("./02_Data/01_Samples/Original_data/108052-01_ResultadosTerrenoBiomasa.xlsx",1) %>% mutate(Ps_Verano_g.m2 =as.numeric(Ps_Verano_g.m2),
Ps_Otoño_g.m2 =as.numeric(Ps_Otoño_g.m2)                                                                       )
Biomasa$SP_dominante <- Biomasa$Sp.Dom
#Biomasa %>% group_by(Sp.Dom) %>% summarise(n=n())
res_sp <- aov(Ps_Verano_g.m2 ~ Sp.Dom,  data = Biomasa
)
# QQ-plot
qqPlot(res_sp$residuals,
xlab= "Quantiles teóricos Normales",
ylab = "Quantiles Residuos",envelope=T,
id = FALSE # id = FALSE to remove point identification
)
# ggplot(Biomasa, aes(x=Ps_Verano_g.m2, fill=Sp.Dom)) +
#   geom_density(alpha=.3)
shapiro.test(res_aov$residuals)
res_aov<- oneway.test(Ps_Verano_g.m2 ~ Sp.Dom,
data = Biomasa,
var.equal = T # assuming unequal variances
)
res_aov<- oneway.test(Ps_Verano_g.m2 ~ Sp.Dom,
data = Biomasa,
var.equal = T # assuming unequal variances
)
res_aov
res_aov<- oneway.test(Ps_Verano_g.m2 ~ Sp.Dom,
data = Biomasa,
var.equal = F # assuming unequal variances
)
res_aov
format(Sys.time(), '%B')
shapiro.test(res_sp$residuals)
Biomasa %>% games_howell_test(Ps_Verano_g.m2 ~ Sp.Dom)
```{r echo=F}
library(rstatix)
Biomasa %>% games_howell_test(Ps_Verano_g.m2 ~ Sp.Dom)
oneway(Biomasa$Ps_Verano_g.m2, y = Biomasa$Sp.Dom, posthoc = 'games-howell')
install.packages("userfriendlyscience")
library(userfriendlyscience)
install.packages("userfriendlyscience")
library(userfriendlyscience)
install.packages("userfriendlyscience")
version
install.packages("userfriendlyscience")
install.packages("userfriendlyscience")
